#### Procesamiento datos ####

# 0. Cargar librerias ----
if (!require("pacman")) install.packages("pacman")
library(pacman)
p_load(tidyverse,
       readxl,
       writexl,
       janitor)


# 1. Cargar datos ----
academicos <- read_excel("peticion-vice/input/Acad.xlsx") %>% clean_names()
proyectos <- read_excel("peticion-vice/input/proyectos.xlsx") %>% clean_names()
postulados26 <- read_excel("peticion-vice/input/Fondecyt 2026.xlsx", sheet = "Regular IR") %>% clean_names()


# 2. Procesar datos academicos ----
academicos <- academicos %>% 
  mutate(
    reparticion = recode(reparticion,
                         "Departamento de Trabajo Social" = "Trabajo Social",
                         "Dpto. de  Psicología (funcionamiento)" = "Psicología",
                         "Dpto. de Antropología (funcionamiento)" = "Antropología",
                         "Dpto. de Sociología (funcionamiento)" = "Sociología",
                         "Dpto. Educación (funcionamiento)" = "Educación",
                         "Escuela Postgrado" = "Postgrado"),
    categoria = recode(jerarquia,
                       "Investigador(a) Postdoctoral" = "Investigador(a) Postdoctoral",
                       "Pendiente" = "Pendiente",
                       "Prof. Asistente - Categ. Academica Doc." = "Docente",
                       "Prof. Asociado - Categ. Academica Doc." = "Docente",
                       "Prof.Titular - Categ. Academica Doc." = "Docente",
                       "Prof. Asistente - Categ. Academica Ord." = "Ordinaria",
                       "Prof. Asociado - Categ. Academica Ord." = "Ordinaria",
                       "Prof.Titular - Categ. Academica Ord." = "Ordinaria",
                       "Prof. Adjunto" = "Prof. Adjunto"),
    jerarquia = recode(jerarquia,
                       "Investigador(a) Postdoctoral" = "Investigador(a) Postdoctoral",
                       "Pendiente" = "Pendiente",
                       "Prof. Asistente - Categ. Academica Doc." = "Asistente",
                       "Prof. Asociado - Categ. Academica Doc." = "Asociado",
                       "Prof.Titular - Categ. Academica Doc." = "Titular",
                       "Prof. Asistente - Categ. Academica Ord." = "Asistente",
                       "Prof. Asociado - Categ. Academica Ord." = "Asociado",
                       "Prof.Titular - Categ. Academica Ord." = "Titular",
                       "Prof. Adjunto" = "Adjunto"),
    jce = horas_reales/44,
    fech_ing_u = year(fech_ing_u),
    ingreso_reciente = case_when(
      fech_ing_u <= 2014 ~ "Ingreso previo a 2015",
      fech_ing_u > 2014 & fech_ing_u <= 2020 ~ "Ingreso 2015-2020",
      fech_ing_u > 2020  ~ "Ingreso 2020-2025"
    ),
    edad_tramos = case_when(
      edad <= 40 ~ "Menores de 40",
      edad > 40 & edad <= 50 ~ "40-49 años",
      edad > 50 & edad <= 60 ~ "50-59 años",
      edad > 60 & edad <= 70 ~ "60-69 años",
      edad > 70 & edad <= 80 ~ "70-79 años",
      edad > 80 ~ "Mayores de 80",
    ),
    nombre_completo = paste(nombres, paterno, materno),
    nombre_completo = gsub("\\.", " ", nombre_completo), # Reemplazar puntos por espacio
    nombre_completo = gsub("\\_", " ", nombre_completo), # Reemplazar guion bajo por espacio
    nombre_completo = gsub("\\-", " ", nombre_completo), # Reemplazar guion por espacio
  ) %>% 
  select(rut, nombre_completo, sexo, 
         reparticion, horas_reales, jce, jerarquia, categoria, 
         ingreso_reciente, edad_tramos)


acads_unicos <- academicos %>%
  group_by(rut) %>%
  filter(n_distinct(reparticion) == 1) %>%  # keep only if constant
  slice(1) %>%
  ungroup()

# 3. Procesar datos postulaciones ----
proyectos <- proyectos %>%
  filter(instrumento == "Regular" & 
           estado_proyecto != "Postulado") %>% # Sacar no patrocinado de Facuse
  # simplificar categorias estado de proyecto
  mutate(
    estado_proyecto = recode(estado_proyecto,
                             "Cancelado" = "Rechazado",
                             "En ejecución" = "Aprobado",
                             "Finalizado" = "Aprobado",
                             "Fuera de Base" = "Fuera de bases")
  ) %>% 
  # pasar de formato wide a long (un investigador y proyecto por c/fila)
  pivot_longer(
    cols = matches("(investigador_\\d+|tipo_investigador\\d+|rut_investigador\\d+)"),
    names_to = c(".value", "n_investigador"),
    names_pattern = "(.*?)(\\d+)"
  ) %>%
  # eliminar filas sin autor
  filter(investigador_ != "-") %>% 
  # seleccionar columnas utiles
  select(id_vid=codigo, titulo, 
         anio_concurso=ano_concurso, estado_proyecto, 
         investigador=investigador_, rut_investigador=rut_investigador_, 
         tipo_investigador=tipo_investigador_, n_investigador, 
         disciplina_principal, area_disciplina_principal, disciplina_exacta_principal)

# 4. Sumar postulaciones nuevas ----

postulados26 <- postulados26 %>%
  select(titulo, investigador=ir, rut_investigador=rut, nombramiento_vigente) %>% # Seleccionar solo las columnas utiles
  filter(!is.na(investigador)) %>% 
  mutate(
    rut_investigador = str_remove_all(rut_investigador, "[-\\.]"), # Eliminar guiones y puntos de los rut
    anio_concurso = 2026, 
    estado_proyecto = "Postulado",
    tipo_investigador = "Investigador responsable"
  )

ir_externos <- postulados26 %>% 
  filter(nombramiento_vigente == FALSE) # guardar en otro lado los nombramiento_vigente FALSE

proyectos <- bind_rows(proyectos, postulados26)

# 5. Ajustar para cruce con base de datos interna ----
proyectos <- proyectos %>% 
  mutate(rut_investigador = ifelse(nchar(rut_investigador) == 9, paste0("0", rut_investigador), rut_investigador),
         rut_investigador = ifelse(nchar(rut_investigador) == 8, paste0("00", rut_investigador), rut_investigador))

saveRDS(proyectos, "peticion-vice/input/proyectos-2020-2026.rds")

# 6. Cruzar datos ----
postulaciones <- merge(proyectos, academicos, 
                       by.x = "rut_investigador", by.y = "rut")

# 7. Guardar ----
saveRDS(postulaciones, "peticion-vice/input/postulaciones-2020-2026.rds")

# Consultar si los analisis deberian ser con todos los postulantes o solo profes
# Yo opino que solo profes, para mantener la consistencia (se filtra toda SEPAVID con ese criterio)


